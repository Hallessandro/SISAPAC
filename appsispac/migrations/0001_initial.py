# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-30 17:31
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cancelamento_Registro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cancelamento', models.DateField(verbose_name='Data do cancelamento')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('motivo', models.CharField(max_length=1000, verbose_name='Motivo')),
            ],
            options={
                'permissions': (('view_cancelamento_registro', 'can see cancelamento_registro'),),
            },
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('matricula', models.IntegerField(unique=True, verbose_name='Matricula')),
                ('Email', models.EmailField(max_length=200, verbose_name='E-Mail')),
                ('senha', models.CharField(max_length=32)),
            ],
            options={
                'permissions': (('view_funcionario', 'can see funcionario'),),
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Horario_Professor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekdays', models.CharField(choices=[('ND', 'Não definido'), ('SEG', 'Segunda-Feira'), ('TER', 'Terça-Feira'), ('QUA', 'Quarta-Feira'), ('QUI', 'Quinta-Feira'), ('SEX', 'Sexta-Feira')], default='ND', max_length=25)),
                ('horario', models.CharField(choices=[('Vazio', 'Indefinido'), ('07:00 - 08:30', '07:00 - 08:30'), ('08:50 - 10:20', '08:50 - 10:20'), ('10:30 - 12:00', '10:30 - 12:00'), ('13:00 - 14:30', '13:00 - 14:30'), ('14:50 - 16:20', '14:50 - 16:20'), ('16:30 - 18:00', '16:30 - 18:00'), ('18:00 - 19:50', '18:00 - 19:50'), ('20:00 - 22:00', '20:00 - 22:00')], default='Vazio', max_length=30)),
                ('turma', models.CharField(max_length=150, verbose_name='Turma')),
                ('disciplina', models.CharField(max_length=255, verbose_name='Disciplina')),
            ],
            options={
                'permissions': (('view_horario_professor', 'can see Horario_professor'),),
            },
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True, verbose_name='Chave')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('confirmed', models.BooleanField(default=False, verbose_name='Confirmado')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resets', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Nova Senha',
                'verbose_name_plural': 'Novas Senhas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Registro_Frequencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_registro', models.DateField(blank=True, null=True, verbose_name='Data do registro')),
                ('data_frequencia', models.DateField(verbose_name='Data da frequência')),
                ('horarios', models.CharField(choices=[('Vazio', 'Indefinido'), ('07:00 - 08:30', '07:00 - 08:30'), ('08:50 - 10:20', '08:50 - 10:20'), ('10:30 - 12:00', '10:30 - 12:00'), ('13:00 - 14:30', '13:00 - 14:30'), ('14:50 - 16:20', '14:50 - 16:20'), ('16:30 - 18:00', '16:30 - 18:00'), ('18:00 - 19:50', '18:00 - 19:50'), ('20:00 - 22:00', '20:00 - 22:00')], default='Vazio', max_length=30)),
                ('registro_frequencia', models.BooleanField(default=False, verbose_name='Registro de Frequência')),
                ('horario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appsispac.Horario_Professor')),
            ],
            options={
                'permissions': (('view_registro_frequencia', 'can see registro frequencia'),),
            },
        ),
        migrations.CreateModel(
            name='Reserva_Sala',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Data do Registro')),
                ('horario', models.CharField(choices=[('Vazio', 'Indefinido'), ('07:00 - 08:30', '07:00 - 08:30'), ('08:50 - 10:20', '08:50 - 10:20'), ('10:30 - 12:00', '10:30 - 12:00'), ('13:00 - 14:30', '13:00 - 14:30'), ('14:50 - 16:20', '14:50 - 16:20'), ('16:30 - 18:00', '16:30 - 18:00'), ('18:00 - 19:50', '18:00 - 19:50'), ('20:00 - 22:00', '20:00 - 22:00')], default='Vazio', max_length=30)),
            ],
            options={
                'permissions': (('view_reserva_Sala', 'can see reserva de sala'),),
            },
        ),
        migrations.CreateModel(
            name='Sala',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sigla', models.CharField(max_length=10, verbose_name='Sigla')),
                ('descricao', models.CharField(max_length=100, verbose_name='Descrição')),
            ],
            options={
                'permissions': (('view_sala', 'can see salas'),),
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('funcionario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='appsispac.Funcionario')),
            ],
            options={
                'permissions': (('view_professor', 'can see professor'),),
            },
            bases=('appsispac.funcionario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='reserva_sala',
            name='funcionario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appsispac.Funcionario'),
        ),
        migrations.AddField(
            model_name='reserva_sala',
            name='sala',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appsispac.Sala'),
        ),
        migrations.AddField(
            model_name='registro_frequencia',
            name='sala',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appsispac.Sala'),
        ),
        migrations.AddField(
            model_name='horario_professor',
            name='sala',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appsispac.Sala'),
        ),
        migrations.AddField(
            model_name='cancelamento_registro',
            name='registro',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appsispac.Registro_Frequencia'),
        ),
        migrations.AddField(
            model_name='horario_professor',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appsispac.Professor'),
        ),
    ]
